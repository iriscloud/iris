/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package cn.iris.cloud.common.extension.adaptive;
import cn.iris.cloud.common.extension.ExtensionLoader;
public class HasAdaptiveExt$Adaptive implements cn.iris.cloud.common.extension.adaptive.HasAdaptiveExt {
public java.lang.String echo(cn.iris.cloud.common.URL arg0, java.lang.String arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
cn.iris.cloud.common.URL url = arg0;
String extName = url.getParameter("has.adaptive.ext", "adaptive");
if(extName == null) throw new IllegalStateException("Failed to get extension (cn.iris.cloud.common.extension.adaptive.HasAdaptiveExt) name from url (" + url.toString() + ") use keys([has.adaptive.ext])");
cn.iris.cloud.common.extension.adaptive.HasAdaptiveExt extension = (cn.iris.cloud.common.extension.adaptive.HasAdaptiveExt)ExtensionLoader.getExtensionLoader(cn.iris.cloud.common.extension.adaptive.HasAdaptiveExt.class).getExtension(extName);
return extension.echo(arg0, arg1);
}
}